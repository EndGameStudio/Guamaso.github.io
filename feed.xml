<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Juan's Dev Journal</title>
    <atom:link href="http://guamaso.github.io//feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://guamaso.github.io/</link>
    <description>Dev journal, snippets, and rants.</description>
    <pubDate>Thu, 10 Jul 2014 14:30:00 -0400</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>Project Mind Dump</title>
      <link>http://guamaso.github.io//articles/project-mind-dump/</link>
      <pubDate>Thu, 10 Jul 2014 14:30:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/project-mind-dump/</guid>
      <author></author>
      <description>&lt;p&gt;I suffer from “Oh shinny” disease. Symptoms include taking on too many new projects, tasks, or challenges.  There is now cure, but symptoms can be alleviated somewhat by sitting down and doing a mind dump.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I use mind dumps to get everything out onto something I can organize and prioritize.  In this case, in keeping with the purpose of the Dev Journal, I want to keep myself accountable for what I have taken on.  So, I’m also including a quick status update on the different projects I’ve started within the past couple months.&lt;/p&gt;
&lt;h2 id=&quot;wordpress-via-yeoman&quot;&gt;WordPress via Yeoman&lt;/h2&gt;
&lt;p&gt;I originally wanted to create a simple web app for an data import I am working on.  My first goal was to install WordPress using Yeoman. That worked great. The next goal was to be able to initiate a simple PHP web server for development using the install location as the web root.  This proved difficult due to my limited understanding of the built in PHP web server, MySQL server, and XAMPP.  I did eventually get that to work.&lt;/p&gt;
&lt;p&gt;The last goal before actually being able to start working was to understand how to access data within the WordPress tables using nothing but the WordPress API’s (maybe some plugins, if needed). This is where work ceased on this project. I found that my time was better spent learning &lt;a href=&quot;http://emberjs.com/&quot;&gt;Ember.js&lt;/a&gt; and building an app that way.  Still, I would like to establish a good workflow using WordPress. Something that includes a PHP web server, MySQL server, and anything else one would need to work with WordPress.&lt;/p&gt;
&lt;p&gt;I’ll look to &lt;a href=&quot;http://bower.io/&quot;&gt;Bower&lt;/a&gt; for this and report back… when I can.  This is low priority.&lt;/p&gt;
&lt;h2 id=&quot;gulp-and-publishing-via-wintersmith&quot;&gt;Gulp and Publishing via Wintersmith&lt;/h2&gt;
&lt;p&gt;I mentioned before why I’m not a fan of Grunt.  Things like &lt;a href=&quot;https://github.com/substack/stream-handbook&quot;&gt;“streams”&lt;/a&gt; and “vinyl” files confuse me a bit but I still prefer Gulp over Grunt.  Maybe that is due to my style.&lt;/p&gt;
&lt;p&gt;I worked a good deal on my script that helps publish articles with &lt;a href=&quot;http://wintersmith.io/&quot;&gt;Wintersmith&lt;/a&gt;.  There are two items left on my To Do list, getting the spell check working and more awareness of what articles are &lt;em&gt;actually&lt;/em&gt; published.  &lt;/p&gt;
&lt;p&gt;This is still ongoing and it’s actually very rewarding. I was not aware of streams and it’s a good way to learn more about Node.js.&lt;/p&gt;
&lt;h2 id=&quot;code-for-cary-page&quot;&gt;Code for Cary page&lt;/h2&gt;
&lt;p&gt;I attended a meetup and offered my assistance with some of their front end problems. I thought the page was great as Robert, the creator of the page and co-captain of the &lt;a href=&quot;http://www.meetup.com/Triangle-Code-for-America/&quot;&gt;Code for Cary brigade&lt;/a&gt;, said he learned how to implement a new script that used a slider affect when the user scrolls the page.  We always focus on whether a page (or product) is good based on the experience for the end user is.  This is a good measure but it’s not the only one.  Learning how to use something and when to apply it is a success. The end user may not like it which is a failure according to that first measure but even that is useful. Failures are only a failure if you don’t learn from it.&lt;/p&gt;
&lt;p&gt;I digress. I’m updating the page and really want to use LESS instead of straight CSS. I’m still working on this as well. This is actually number one.&lt;/p&gt;
&lt;h2 id=&quot;writing-moar-&quot;&gt;Writing moar…&lt;/h2&gt;
&lt;p&gt;I like writing. I love it. I suck at it, though.  I suck at web development, too, though.  And this journal’s purpose is to help me learn web development as much as it is to help me learn to write more better. (I did that on purpose…)&lt;/p&gt;
&lt;p&gt;I write in a few different places which may contribute to the problem of not writing more often, I don’t feel like it’s a lot of places. I write about creativity in one spot, video games in another, and web dev here.  Not too bad.  My goal is one article a month for each site. With as many minor posts as possible. This, in case you were wondering, is a minor post. :)&lt;/p&gt;
&lt;p&gt;I really just need to shut up and write more. This is an ongoing thing, too.&lt;/p&gt;
&lt;h2 id=&quot;mentoring&quot;&gt;Mentoring&lt;/h2&gt;
&lt;p&gt;Like I said, I’m not that great. I don’t have my own agency, I haven’t organized my own conference, or made any major contributions to the community really.  I made peace with my inability to keep up with others skill-wise.  I know the saying, there is always someone smarter than you, but that’s not what this is about. I’m ok with not being an expert at anything.  That doesn’t mean stop learning or trying my best, it just means that I measure my success against myself. I know what I am capable of now and I know what success looks like to me.&lt;/p&gt;
&lt;p&gt;Success looks like helping others develop the skills.  I meet a lot of people just entering the field with that deer-in-headlights look. They want to know where to start and they’re scared because nothing makes sense.  Been there. I remember it clearly.  I remember thinking how much I would benefit from a mentor.  There are plenty of places to ask questions and get guidance on-line, but let’s be honest, we can be a bunch of jerks sometimes.  I’m getting rant-y so I’ll just finish by saying that we need a better mentoring system.  One that doesn’t require an initiate to have loads of cash (as much as those programs are worth the investment, not everyone has the time or finances to apply).&lt;/p&gt;
&lt;p&gt;I’m doing research on how I can help.  Again, I’m not one of the “greats” by any means, but I got &lt;em&gt;heart&lt;/em&gt;, yo.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Week Notes 5</title>
      <link>http://guamaso.github.io//articles/weeknotes-2014-05/</link>
      <pubDate>Sat, 05 Jul 2014 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/weeknotes-2014-05/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;strong&gt;Week Notes #5&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Establishing a LESS workflow using Gulp. Found out about Code for America - a really cool thing.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Part of leveling up my skills is also leveling up my ability to communicate, lead, and mentor others. I feel that these skills require constant interaction with fellow developers.  Therefore, I attend a lot of meetups… well, as many as I can.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://codeforamerica.org/&quot;&gt;Code for America&lt;/a&gt; is a really great organization. Having developed an interest in local government while working for the City of Fayetteville a few years back, I thought it would be interesting to see what the organization had to offer.  There are three Brigades (groups or teams), in the Raleigh/Durham area: Raleigh, Durham, and Cary. It so happened that I was free the night of the Cary meetup.  Meeting with the team of civic-minded folks was great and inspiring.&lt;/p&gt;
&lt;p&gt;They mentioned needing help with the landing page of the Code for Cary site. I started working on that earlier and thought it would be a great place to learn LESS. Unfortunately, I am a perfectionist.  Through my initial research, I found that using LESS in development requires adding scripts so the files are compiled by the client. This is fine - actually, this is perfect. The problem is, I don’t know what the production environment is like. Which means that I’ll have to compile a build and have that ready for production. That is just too much for a simple page site.&lt;/p&gt;
&lt;p&gt;I’m going to keep researching and learning but I may skip LESS on this project. Who knows, maybe it won’t be so bad and I use it anyway.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Week Notes 4</title>
      <link>http://guamaso.github.io//articles/weeknotes-2014-04/</link>
      <pubDate>Sat, 28 Jun 2014 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/weeknotes-2014-04/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;strong&gt;Week Notes #4&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Traveled this week which means two things. Got nothing done and learned that I can get a lot of nothing done with an iPad.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Being nomadic is an interesting concept for a distributed workforce.  I work from home and don’t venture out to coffee shops or other remote areas so traveling while still meeting other obligations is an interesting challenge.  Unfortunately, the obligations I’m talking about are work related; I wasn’t able to work on my own leveling up.&lt;/p&gt;
&lt;p&gt;I was able to use this whole experience as an experiment on working nomadically.  First of all, my work laptop failed miserably - the wireless card is crap on this laptop.  Thanks to GIT, I was able to do work, do some minor testing (our app requires access to a remote database), and commit locally.  However, I wasn’t able to push my commits to Github.&lt;/p&gt;
&lt;p&gt;For our standups I used Zoom on the iPad.  In fact, the iPad turned out to work out very well for writing code and other tasks like writing documentation or updating Jira.  After a few hours of fiddling with the laptop, I gave up and switched to using the iPad completely.  My work is backed up to Dropbox but since only the iPad could access the web, the little work I churned out via the laptop was not backed up right away. &lt;/p&gt;
&lt;p&gt;Although there doesn’t seem to be a native/easy way to commit or push from the iPad, I could have used my work desktop via Citrix.  I don’t like the idea of relying on a remote machine.  There are many possible failure points: the computer itself, the network it’s on, the Citrix server, and everything in between.  This is really the only chink in the armor but it’s a chink that is hard to hit (this metaphor isn’t working for me…). &lt;/p&gt;
&lt;p&gt;I was thinking of doing some SASS/LESS work in Wakanda this week.  One task requires me to do some CSS work and thought it would be a good time to bring in the last piece of the puzzle. I am using Gulp to compile CoffeeScript, so using LESS was next on my “To Do” list anyway. Should be fun.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Week Notes 3</title>
      <link>http://guamaso.github.io//articles/weeknotes-2014-03/</link>
      <pubDate>Fri, 20 Jun 2014 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/weeknotes-2014-03/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;strong&gt;Week Notes #3&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Wrestled with setting up WordPress locally to create a small temporary application.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Last week, I installed WordPress locally using Yeoman, which was super easy. I like using PHP’s built in web server for testing and developing but something about my PHP installation didn’t seem to like the MySQL installation I had. Found out that I didn’t have the &lt;code&gt;PHP.ini&lt;/code&gt; file properly configured for use of MySQL. Updating that got me going with WordPress locally.  The next step is to use Gulp to automate the server startup and I’d like to backup the &lt;code&gt;wp-contents&lt;/code&gt; folder as well, either through a commit or through a copy/paste/rename action.&lt;/p&gt;
&lt;p&gt;I love my job. I love my industry. Web application engineering is fun, intriguing, and exciting. Yet, there is &lt;em&gt;so&lt;/em&gt; much drama in our field. Lately, I’ve struggled with how to handle some big names in the field pushing their opinions or agenda. On the one hand, they are completely allowed their opinions. On the other hand, people don’t seem to think for themselves and will choose to follow anyone blindly.  I suppose this dynamic is part of the human condition, but it doesn’t make it any less painful to watch.  I bring this up only as a passing thought; it’s something I think that requires more discussion for a later post.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Week Notes 2</title>
      <link>http://guamaso.github.io//articles/weeknotes-2014-02/</link>
      <pubDate>Sat, 14 Jun 2014 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/weeknotes-2014-02/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;strong&gt;Week Two&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Worked with Gulp. Field Notes are awesome! Fiddled with Yeoman to install WordPress locally.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I like Gulp more than Grunt.&lt;/p&gt;
&lt;p&gt;I enjoy playing with command line but I’m not a fan of using it heavily for certain tasks.  That aside, my biggest problem with Grunt is the unstandardized way that people can set configurations for tasks. Using a tilde or a dash and a specific keyword can modify a plugin in many ways. Sometimes these commands are documented sometimes you have to look over their code. Again, I have no problem with sifting through code (when required) but documenting your product is an important part of delivering the product.  Gulp’s m.o. is to focus on code over configuration. Loads easier to work with. In fact, I was able to create a script to process my entire publishing workflow with Wintersmith. It’s not a 100% but it will get there.&lt;/p&gt;
&lt;p&gt;I use Field Notes for a lot of stuff. I’ve converted the wife even! From a design stand point, they are a lot of fun to collect and even more of a delight to use.  I am so excited to see a larger version come out in the limited edition Colors items. Ordered a few extras above what I already get from my subscription.&lt;/p&gt;
&lt;p&gt;Yeoman is my next project. I am creating a quick app with WordPress and I’m looking for a quick way to get started. I was hoping Yeoman would be my one stop shop but it looks like I still need to do some extra work. Not too big of a deal if I learn how to use Yeoman better. Afterwards, I’d like to make my own generator.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Publishing Wintersmith with Gulp - Version 1</title>
      <link>http://guamaso.github.io//articles/publishing-with-gulp-and-wintersmith/</link>
      <pubDate>Sun, 08 Jun 2014 20:31:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/publishing-with-gulp-and-wintersmith/</guid>
      <author></author>
      <description>&lt;p&gt;Unfortunately, I didn’t get all of my must-have items but I was able to get most of them.&lt;/p&gt;
&lt;p&gt;The Gulpfile does all of my bare minimum tasks except for one thing - committing and pushing to the github pages repository.  Since I have my versioning split into three different repos and the gulp-git module assumes that the location of the gulpfile &lt;em&gt;is&lt;/em&gt; the repository home (I think…), it fails since I don’t have a repo there.&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/Guamaso/a8717f5085c0728f91c0.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;I was hoping to change the current working directory to the actual repo folder but I’m not sure how or if this is possible.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;rename&lt;/code&gt; module is a life savor for working with Wintersmith. Moving articles from my &lt;code&gt;articles&lt;/code&gt; folder to the &lt;code&gt;wintersmith&lt;/code&gt; folder was easier than I originally thought.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;run-Wintersmith&lt;/code&gt; module was a bit tricky. I’m not certain why but npm was erroring out during install.  I added &lt;code&gt;wintersmith&lt;/code&gt; as a dependency to my gulpfile and copied the &lt;code&gt;index.js&lt;/code&gt; and &lt;code&gt;package.json&lt;/code&gt; files manually to the incomplete folder within &lt;code&gt;node-modules&lt;/code&gt;. It’s a hack but it works; I can successfully run &lt;code&gt;wintersmith.build()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The very next step is to get git working. Right after that is spell checking. Later on, I’d like to add better handling of the articles.  &lt;/p&gt;
&lt;p&gt;My &lt;code&gt;articles/published&lt;/code&gt; folder should always win. In other words, the &lt;code&gt;wintersmith/content/articles&lt;/code&gt; folder should match only what is in the published files and nothing more. During testing, a draft article snuck in my wintersmith folder even though it wasn’t in my published folder. This should be rare once I’m done testing but I’d still like to catch it instead of having a draft article get published.&lt;/p&gt;
&lt;p&gt;Until then, I am currently running git commands manually. This isn’t &lt;em&gt;that&lt;/em&gt; big of a deal as my main purpose was to have an article structure that could be managed easily.  &lt;/p&gt;
&lt;p&gt;Wintersmith kind of kills me in that I can’t group articles in a folder. I wanted to have articles grouped by year, for example.  So, a blog post from 2013 would show up as &lt;code&gt;domain.com/2013/my-blog-post/&lt;/code&gt;. If it can do this, I have not found how.  Wintersmith does not support drafts - which actually makes sense, I’m just surprised I haven’t seen many solutions for this.&lt;/p&gt;
&lt;p&gt;Either way, the script provides about 70% of what I set out to do, so I’d call this a solid and productive day.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Learning Gulp, Wintersmith tasks</title>
      <link>http://guamaso.github.io//articles/learning-gulp/</link>
      <pubDate>Sun, 08 Jun 2014 13:20:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/learning-gulp/</guid>
      <author></author>
      <description>&lt;p&gt;I like command line but as a consumer of some products, I prefer a GUI. Automated tasks runners like Grunt and Gulp, in my opinion should have a GUI for consumers (read: developers). I’ve seen some early work and attempts but nothing very usable. So, here I am learning one of them because, through all my complaining, I &lt;em&gt;do&lt;/em&gt; need to learn them.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;I like learning a new thing by implementing it in something I am already working on.  I figured automating some of my dev journal workflow made sense. Since Wintersmith doesn’t really &lt;em&gt;do&lt;/em&gt; drafts, I figured Gulp could help out a bit.  So, I worked out the tasks that I &lt;em&gt;think&lt;/em&gt; I need in order to make publish easier via Github Pages and Wintersmith.  &lt;/p&gt;
&lt;p&gt;Not all the steps are required right now, like testing each published article for example.  In fact, some of these steps I’d like to wrap as a plugin. But that’s for later.&lt;/p&gt;
&lt;p&gt;I started out with the following file structure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;dev_journal - root&lt;ul&gt;
&lt;li&gt;articles - holds markdown articles&lt;ul&gt;
&lt;li&gt;drafts&lt;/li&gt;
&lt;li&gt;scheduled&lt;/li&gt;
&lt;li&gt;published&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;github_pages - “production”&lt;/li&gt;
&lt;li&gt;wintersmith - holds published articles and template&lt;ul&gt;
&lt;li&gt;build&lt;/li&gt;
&lt;li&gt;template&lt;/li&gt;
&lt;li&gt;content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are three git repos, one for the root &lt;code&gt;articles&lt;/code&gt; folder, one for the &lt;code&gt;wintersmith\template&lt;/code&gt; folder, and one for the &lt;code&gt;github_pages&lt;/code&gt; folder.  I could probably consolidate these down to two, maybe even one repo but I’m doing this in baby steps. :)  All of the gulp and package files live in root.&lt;/p&gt;
&lt;p&gt;The tasks are written out with every step I &lt;strong&gt;want&lt;/strong&gt; in my workflow. But I don’t have the time to learn and get all of it working so I’m focusing on the moving of files first. I will fine tune and improve as I go along.&lt;/p&gt;
&lt;h2 id=&quot;gulp-task-process-drafts&quot;&gt;Gulp Task: Process Drafts&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Grab all files from &lt;code&gt;articles/drafts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Check spelling and grammar.  Do not continue processing file if errors exist but save a copy of it to &lt;code&gt;articles/drafts&lt;/code&gt; with spelling/grammar suggestions.&lt;/li&gt;
&lt;li&gt;Check metadata of file. Wintersmith has the metadata header which has a few required fields. Do not continue processing file if errors exist.&lt;/li&gt;
&lt;li&gt;Move remaining files to &lt;code&gt;articles/scheduled&lt;/code&gt; folder.  If the header is filled out then it’s ready to be published.&lt;/li&gt;
&lt;li&gt;Commit changes to the &lt;code&gt;articles&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;gulp-task-process-scheduled-articles&quot;&gt;Gulp Task: Process Scheduled Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Grab all files from &lt;code&gt;artciles/scheduled&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Spellcheck each file.  Create a copy of any file with errors. Move original and copy to &lt;code&gt;articles/drafts&lt;/code&gt; folder.&lt;/li&gt;
&lt;li&gt;Create folders in &lt;code&gt;wintersmith/content/articles&lt;/code&gt; based on file names of each markdown file.&lt;/li&gt;
&lt;li&gt;Copy each file into its respective folder.&lt;/li&gt;
&lt;li&gt;Rename each file to “index.md”&lt;/li&gt;
&lt;li&gt;Run wintersmith build, verify no errors.&lt;/li&gt;
&lt;li&gt;Commit changes to the &lt;code&gt;articles&lt;/code&gt; folder.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;gulp-task-publish-to-github-pages&quot;&gt;Gulp Task: Publish to Github Pages&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clear github pages folder (except .git)&lt;/li&gt;
&lt;li&gt;Copy wintersmith/build folder to github pages folder. &lt;/li&gt;
&lt;li&gt;Commit changes to &lt;code&gt;github_pages&lt;/code&gt; repo.&lt;/li&gt;
&lt;li&gt;Push changes to GitHub.&lt;/li&gt;
&lt;li&gt;Wait a few moments (for github pages to update). Maybe this can be a separate task?&lt;/li&gt;
&lt;li&gt;Check each article to make sure it exists at url and that content is correct.&lt;/li&gt;
&lt;li&gt;Move scheduled files to the published folder, if they were indeed published.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Week Notes 1</title>
      <link>http://guamaso.github.io//articles/weeknotes-2014-01/</link>
      <pubDate>Fri, 06 Jun 2014 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/weeknotes-2014-01/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;strong&gt;Week Notes #1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Week notes are a great cross between journaling and blogging. The goal of keeping yourself accountable to the interwebz and, more importantly, yourself, is a good goal to shoot for.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There is a lot to learn in the world of web development; always something new coming out.  I have a Trello board listing all the applications, frameworks, languages, and tools that I need to, at the very least, become familiar with.&lt;/p&gt;
&lt;p&gt;This week I focused on getting caught up with some other articles/posts as well as keeping up with work tasks. Not a whole lot of time spent on learning new things or practicing existing skills (outside of work, anyway).  &lt;/p&gt;
&lt;p&gt;We are switching over to Wakanda at work and I’m looking to see how I can use things like Grunt/Gulp, SASS, or CoffeeScript with it.  The application is fairly robust and flexible… ish.  I was able to get Foundation working with it some time ago, as well as Mustache.  I even used CoffeeScript for a module script I had to write.  I’m just not sure how to fit in these tools seamlessly with the built in server. It will probably require a custom plugin.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Blocking Right Click Is Just Bad</title>
      <link>http://guamaso.github.io//articles/right-click-blocking-is-bad/</link>
      <pubDate>Thu, 24 Apr 2014 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/right-click-blocking-is-bad/</guid>
      <author></author>
      <description>&lt;p&gt;My uncle’s family owns their own successful restaurant back in California. Really great Mexican food. Most dishes are authentic to the area they are from back in Mexico. Other dishes are hybrids to cater to different tastes but it’s all good grub!&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Anyway, every now and then, I’ll look at websites of people I know and look for stuff to mock and cajole.  By mock and cajole, I mean to say, analyze and learn what NOT to do.&lt;/p&gt;
&lt;p&gt;The exciting part is to see their site using a more mobile first approach. The site is responsive, albeit a little clunky.  Even the obvious stock photography isn’t that bad. &lt;/p&gt;
&lt;p&gt;I was impressed. So, here I go to try and look up the agency that created the site. I scroll to the footer, find the typical “Designed by” link and right click on it when suddenly… BOOM. Browser alert message.&lt;/p&gt;
&lt;p&gt;Here’s what it says: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;XXXXX does not allow you to copy or extract any information and/or images from this website.**PLEASE DO NOT TRY THIS ACTION AGAIN**&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I personally know the owners and even I felt a little miffed by the assumption that I was going to steal their horrible stock photos… or the photos of my Uncle with his hugantic cheezer. &lt;/p&gt;
&lt;p&gt;Here’s the deal, most users don’t want to steal. Most users might want to print the page using right click. Or, in my case, open a link in new tab.  Maybe they want to copy your phone number to the clipboard to save into some phone book application.  There are a number of use cases that require the right click which means that by disabling it with a blatantly rude message results in a poor experience for your site and, in turn, your brand.&lt;/p&gt;
&lt;p&gt;“What about the people that &lt;em&gt;do&lt;/em&gt; want to steal my stuff?” Try this: Hold down CTRL+S. You just stole your stuff. Are you going to block the CTRL key now too? Are you aware that I can disrupt the code that blocks the right click?&lt;/p&gt;
&lt;p&gt;You need to understand how the internet works. The browser is receiving files from the internet, specifically a computer somewhere that holds your site. These files are delivered and the connection between the browser and the server is closed. Guess what? Those files now exist on the person’s computer. The user didn’t need to right click to steal them; they’re already there! &lt;/p&gt;
&lt;p&gt;People that want to steal photos of my Uncle holding an awesome plate of seafood with the restaurant logo underneath are going to steal it. There is nothing you can do.&lt;/p&gt;
&lt;p&gt;What you are doing, though, is creating a bad experience for the legit people.&lt;/p&gt;
&lt;h2 id=&quot;final-notes&quot;&gt;Final Notes&lt;/h2&gt;
&lt;p&gt;After reviewing the code that handles the alert, I found this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-javascript&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(closeWin==&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;) self.close();
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If &lt;code&gt;closeWin&lt;/code&gt; is set to &lt;code&gt;1&lt;/code&gt;, the tab will close. WOW. You have just fired your customer before they became your customer. You essentially threw away money. Bravo.&lt;/p&gt;
&lt;p&gt;Here’s the &lt;a href=&quot;https://gist.github.com/Guamaso/11240273&quot;&gt;whole script&lt;/a&gt; I mined out of the site. It seems like it is a snippet grabbed from someone else, otherwise I wouldn’t use it without permission.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Hello World!</title>
      <link>http://guamaso.github.io//articles/helloworld/</link>
      <pubDate>Wed, 23 Apr 2014 15:00:00 -0400</pubDate>
      <guid isPermaLink="true">http://guamaso.github.io//articles/helloworld/</guid>
      <author></author>
      <description>&lt;p&gt;I like Ruby in the same way that I like craft/micro beers. I actually don’t like beer, but I like the idea that there is a growing trend for something better than your mass produced, corn syrup sweetened, GMO wheat fermentation. Ruby’s great… but I’m more of a hard cider guy. &lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So, I thought I’d try using Wintersmith with Github Pages.&lt;/p&gt;
&lt;p&gt;And look at that… works pretty good! :D&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>